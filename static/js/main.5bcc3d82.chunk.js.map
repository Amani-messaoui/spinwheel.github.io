{"version":3,"sources":["components/wheel/ModalWheel.js","components/wheel/index.js","App.js","reportWebVitals.js","index.js"],"names":["ModalWheel","setIsModalVisible","isModalVisible","itemobject","pauseAnimation","title","className","name","width","centered","visible","onOk","onCancel","footer","height","controls","autoPlay","src","Video","type","canvasStyles","position","pointerEvents","top","left","getAnimationSettings","angle","originX","particleCount","spread","origin","x","colors","Index","props","useState","selectedItem","setSelectedItem","refAnimationInstance","useRef","intervalId","setIntervalId","getInstance","useCallback","instance","current","nextTickAnimation","startAnimation","setInterval","clearInterval","useEffect","wheelVars","items","length","spinning","filter","e","console","log","style","onClick","Math","floor","random","setTimeout","map","item","index","refConfetti","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bcc3d82.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Modal } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction ModalWheel({ setIsModalVisible, isModalVisible, itemobject, pauseAnimation }) {\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n        pauseAnimation()\r\n    };\r\n    return (\r\n        <div>\r\n            <Modal title= {\r\n                <div>\r\n                    <h5 className=\"NameOfChoise\">Your choise was : \r\n                    <span> {itemobject[0].name}</span></h5>\r\n                </div>\r\n            }\r\n                width={800}\r\n                centered\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                footer={null}>\r\n                <video width=\"750px\" height=\"350px\" controls autoPlay\r\n                    src={itemobject[0].Video} type=\"video/mp4\">\r\n                </video>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWheel\r\n","import React from 'react'\r\nimport './index.css';\r\nimport { useState , useRef, useCallback, useEffect} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport ModalWheel from './ModalWheel';\r\nimport ReactCanvasConfetti from 'react-canvas-confetti';\r\n\r\nconst canvasStyles = {\r\n  position: 'fixed',\r\n  pointerEvents: 'none',\r\n  width: '100%',\r\n  height: '100%',\r\n  top: 0,\r\n  left: 0\r\n}\r\nfunction getAnimationSettings(angle, originX) {\r\n  return {\r\n    particleCount: 3,\r\n    angle,\r\n    spread: 55,\r\n    origin: { x: originX },\r\n    colors: [\"#000\", \"#fffff\"]\r\n  };\r\n}\r\nfunction Index(props) {\r\n    const [selectedItem, setSelectedItem] =  useState(null)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);  \r\n    const refAnimationInstance = useRef(null);\r\n    const [intervalId, setIntervalId] = useState(); \r\n\r\nconst getInstance = useCallback((instance) => {\r\n  refAnimationInstance.current = instance;\r\n}, []);\r\n\r\nconst nextTickAnimation = useCallback(() => {\r\n  if (refAnimationInstance.current) {\r\n    refAnimationInstance.current(getAnimationSettings(60, 0));\r\n    refAnimationInstance.current(getAnimationSettings(120, 1));\r\n  }\r\n}, []);\r\n\r\nconst startAnimation = useCallback(() => {\r\n  if (!intervalId) {\r\n    setIntervalId(setInterval(nextTickAnimation, 16));\r\n  }\r\n}, [nextTickAnimation, intervalId]);\r\n\r\nconst pauseAnimation = useCallback(() => {\r\n  clearInterval(intervalId);\r\n  setIntervalId(null);\r\n}, [intervalId]);\r\n\r\nconst showModal = () => {\r\n  setIsModalVisible(true);\r\n  startAnimation()\r\n};\r\nuseEffect(() => {\r\n  return () => {\r\n    clearInterval(intervalId);\r\n  };\r\n}, [intervalId]);\r\n\r\n    const  selectItem = () => {\r\n        if ( selectedItem === null) {\r\n          const selectedItem = Math.floor(Math.random() * props.items.length) + 1;\r\n          setSelectedItem(selectedItem);\r\n        }\r\n         else {\r\n             if(selectedItem){\r\n                setSelectedItem(null) ;\r\n                setTimeout( Math.floor(Math.random() * props.items.length) + 1);\r\n           \r\n             }\r\n        }\r\n        setTimeout(()=>{\r\n          showModal()\r\n        }, 9000)  \r\n      }\r\n     \r\n      const wheelVars = {\r\n        '--nb-item': props.items.length  ,\r\n        '--selected-item': selectedItem - 1,\r\n      };\r\n      const spinning = selectedItem !== null ? 'spinning' : '';\r\n      const itemobject =selectedItem && props.items && props.items.filter(e=> e.name === selectedItem)\r\n      console.log(\"props.items\", props.items)\r\n\r\n      console.log(\"itemobject\", itemobject)\r\n    return (\r\n                 <div className=\"wheel-container\">\r\n        <div style={wheelVars} className={`wheel ${spinning}`} onClick={selectItem}  >\r\n          {props.items.map((item, index) => (\r\n            <div className=\"wheel-item\" key={index} style={{ '--item-nb': index }}>\r\n              {item.name}   \r\n            </div>\r\n          ))}\r\n       \r\n        </div>\r\n        {itemobject ? \r\n        <div>\r\n      <ReactCanvasConfetti refConfetti={getInstance} style={canvasStyles} />\r\n       <ModalWheel\r\n      pauseAnimation={pauseAnimation}\r\n       setIsModalVisible={setIsModalVisible}\r\n       isModalVisible={isModalVisible}\r\n       itemobject={itemobject}/> \r\n            </div>\r\n        : null}\r\n   \r\n      </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Index\r\n","import Wheel from \"./components/wheel\"\nfunction App() {\n  // const places = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n  const Places = [\n    {\n    name: 1,\n    Video: \"./Videos/v1.mp4\"\n  },\n  {\n    name: 2,\n    Video: \"./Videos/v2.mp4\"\n  },\n  {\n    name: 3,\n    Video: \"./Videos/v3.mp4\"\n  },\n  {\n    name: 4,\n    Video: \"./Videos/v4.mp4\"\n  },\n  {\n    name: 5,\n    Video: \"./Videos/v5.mp4\"\n  },\n  {\n    name: 6,\n    Video: \"./Videos/v5c1.mp4\"\n  },\n  {\n    name: 7,\n    Video: \"./Videos/v6.mp4\"\n  },\n  {\n    name: 8,\n    Video: \"./Videos/v6c1.mp4\"\n  },\n  {\n    name: 9,\n    Video: \"./Videos/v7.mp4\"\n  },\n  {\n    name: 10,\n    Video: \"./Videos/v8.mp4\"\n  },\n  {\n    name: 11,\n    Video: \"./Videos/v9.mp4\"\n  },\n  {\n    name: 12,\n    Video: \"./Videos/v10.mp4\"\n  },\n  {\n    name: 13,\n    Video: \"./Videos/v11.mp4\"\n  },\n  {\n    name: 14,\n    Video: \"./Videos/v12.mp4\"\n  },\n];\n\n  return (\n    <div className=\"App\">\n      <h1>Spin the wheel and try your luck</h1>\n        <Wheel items={Places} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}